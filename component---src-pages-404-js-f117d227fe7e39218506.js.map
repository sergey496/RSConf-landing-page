{"version":3,"sources":["webpack:///./src/pages/404.js","webpack:///./src/components/seo.js"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","react_i18next__WEBPACK_IMPORTED_MODULE_1__","_components_layout__WEBPACK_IMPORTED_MODULE_2__","_components_seo__WEBPACK_IMPORTED_MODULE_3__","NotFoundPage","a","createElement","title","detailsQuery","SEO","_ref","description","lang","meta","keywords","react__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_4__","query","render","data","metaDescription","site","siteMetadata","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","_public_static_d_1025518380_json__WEBPACK_IMPORTED_MODULE_0__","defaultProps","propTypes","PropTypes","string","arrayOf","isRequired"],"mappings":"0FAAAA,EAAAC,EAAAC,GAAA,IAAAC,EAAAH,EAAA,GAAAI,EAAAJ,EAAAK,EAAAF,GAAAG,EAAAN,EAAA,KAAAO,EAAAP,EAAA,KAAAQ,EAAAR,EAAA,KAkBeS,UAZM,kBACnBL,EAAAM,EAAAC,cAACJ,EAAA,EAAD,KACEH,EAAAM,EAAAC,cAACH,EAAA,EAAD,CAAKI,MAAM,mBACXR,EAAAM,EAAAC,cAAA,UACEP,EAAAM,EAAAC,cAACL,EAAA,EAAD,kBAEFF,EAAAM,EAAAC,cAAA,SACEP,EAAAM,EAAAC,cAACL,EAAA,EAAD,kICRAO,EAAY,aAYlB,SAASC,EAATC,GAEG,IADDC,EACCD,EADDC,YAAaC,EACZF,EADYE,KAAMC,EAClBH,EADkBG,KAAMC,EACxBJ,EADwBI,SAAUP,EAClCG,EADkCH,MAEnC,OACEQ,EAAAV,EAAAC,cAACU,EAAA,YAAD,CACEC,MAAOT,EACPU,OAAQ,SAACC,GACP,IAAMC,EAAkBT,GAAeQ,EAAKE,KAAKC,aAAaX,YAC9D,OACEI,EAAAV,EAAAC,cAACiB,EAAAlB,EAAD,CACEmB,eAAgB,CACdZ,QAEFL,MAAOA,EACPkB,cAAa,QAAUN,EAAKE,KAAKC,aAAaf,MAC9CM,KAAM,CACJ,CACEa,KAAM,cACNC,QAASP,GAEX,CACEQ,SAAU,WACVD,QAASpB,GAEX,CACEqB,SAAU,iBACVD,QAASP,GAEX,CACEQ,SAAU,UACVD,QAAS,WAEX,CACED,KAAM,eACNC,QAAS,WAEX,CACED,KAAM,kBACNC,QAASR,EAAKE,KAAKC,aAAaO,QAElC,CACEH,KAAM,gBACNC,QAASpB,GAEX,CACEmB,KAAM,sBACNC,QAASP,IAGVU,OACChB,EAASiB,OAAS,EACd,CACAL,KAAM,WACNC,QAASb,EAASkB,KAAK,OAEvB,IAELF,OAAOjB,MArDlBM,KAAAc,IA6DJxB,EAAIyB,aAAe,CACjBtB,KAAM,KACNC,KAAM,GACNC,SAAU,GACVH,YAAa,IAGfF,EAAI0B,UAAY,CACdxB,YAAayB,IAAUC,OACvBzB,KAAMwB,IAAUC,OAChBxB,KAAMuB,IAAUE,QAChBxB,SAAUsB,IAAUE,QAAQF,IAAUC,QACtC9B,MAAO6B,IAAUC,OAAOE,YAGX9B","file":"component---src-pages-404-js-f117d227fe7e39218506.js","sourcesContent":["import React from 'react';\nimport { Trans } from 'react-i18next';\n\nimport Layout from '../components/layout';\nimport SEO from '../components/seo';\n\nconst NotFoundPage = () => (\n  <Layout>\n    <SEO title=\"404: Not found\" />\n    <h1>\n      <Trans>NotFound</Trans>\n    </h1>\n    <p>\n      <Trans>messageError</Trans>\n    </p>\n  </Layout>\n);\n\nexport default NotFoundPage;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Helmet from 'react-helmet';\nimport { StaticQuery, graphql } from 'gatsby';\n\nconst detailsQuery = graphql`\n  query DefaultSEOQuery {\n    site {\n      siteMetadata {\n        title\n        description\n        author\n      }\n    }\n  }\n`;\n\nfunction SEO({\n  description, lang, meta, keywords, title,\n}) {\n  return (\n    <StaticQuery\n      query={detailsQuery}\n      render={(data) => {\n        const metaDescription = description || data.site.siteMetadata.description;\n        return (\n          <Helmet\n            htmlAttributes={{\n              lang,\n            }}\n            title={title}\n            titleTemplate={`%s | ${data.site.siteMetadata.title}`}\n            meta={[\n              {\n                name: 'description',\n                content: metaDescription,\n              },\n              {\n                property: 'og:title',\n                content: title,\n              },\n              {\n                property: 'og:description',\n                content: metaDescription,\n              },\n              {\n                property: 'og:type',\n                content: 'website',\n              },\n              {\n                name: 'twitter:card',\n                content: 'summary',\n              },\n              {\n                name: 'twitter:creator',\n                content: data.site.siteMetadata.author,\n              },\n              {\n                name: 'twitter:title',\n                content: title,\n              },\n              {\n                name: 'twitter:description',\n                content: metaDescription,\n              },\n            ]\n              .concat(\n                keywords.length > 0\n                  ? {\n                    name: 'keywords',\n                    content: keywords.join(', '),\n                  }\n                  : [],\n              )\n              .concat(meta)}\n          />\n        );\n      }}\n    />\n  );\n}\n\nSEO.defaultProps = {\n  lang: 'en',\n  meta: [],\n  keywords: [],\n  description: '',\n};\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n};\n\nexport default SEO;\n"],"sourceRoot":""}